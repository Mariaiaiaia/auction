2025-06-20T00:03:13.498+03:00  INFO 6108 --- [main] com.maria.handler.ItemHandlerTest        : Starting ItemHandlerTest using Java 21 with PID 6108 (started by mryhnwbyzqy in /Users/mryhnwbyzqy/Desktop/Auction/ItemService)
2025-06-20T00:03:13.513+03:00  INFO 6108 --- [main] com.maria.handler.ItemHandlerTest        : No active profile set, falling back to 1 default profile: "default"
2025-06-20T00:03:14.974+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-20T00:03:14.977+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-06-20T00:03:15.046+03:00  INFO 6108 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.maria.repository.ItemRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-06-20T00:03:15.048+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 66 ms. Found 0 Reactive MongoDB repository interfaces.
2025-06-20T00:03:15.077+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-20T00:03:15.079+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-06-20T00:03:15.190+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 110 ms. Found 1 R2DBC repository interface.
2025-06-20T00:03:15.214+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-20T00:03:15.215+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-20T00:03:15.238+03:00  INFO 6108 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.maria.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-20T00:03:15.240+03:00  INFO 6108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2025-06-20T00:03:21.154+03:00  INFO 6108 --- [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "15.3"}, "platform": "Java/Oracle Corporation/21+35-2513"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@63f08f9f, socketChannelClass=null, allocator=null, sslContext=null}, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6e21b6f8, com.mongodb.Jep395RecordCodecProvider@69a14512, com.mongodb.KotlinCodecProvider@4bd7e0b6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-06-20T00:03:21.192+03:00  INFO 6108 --- [cluster-ClusterId{value='68547b195aee932447b99ba1', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Exception in monitor thread while connecting to server localhost:27017

com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.lambda$operationComplete$1(NettyStream.java:527) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.Locks.lambda$withLock$0(Locks.java:33) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.Locks.checkedWithLock(Locks.java:45) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.Locks.withLock(Locks.java:39) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.Locks.withLock(Locks.java:32) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.operationComplete(NettyStream.java:514) ~[mongodb-driver-core-5.0.1.jar:na]
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.operationComplete(NettyStream.java:500) ~[mongodb-driver-core-5.0.1.jar:na]
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/[0:0:0:0:0:0:0:1]:27017
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973) ~[na:na]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T00:03:21.784+03:00  INFO 6108 --- [main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 49979 (http)
2025-06-20T00:03:21.816+03:00  INFO 6108 --- [main] com.maria.handler.ItemHandlerTest        : Started ItemHandlerTest in 8.821 seconds (process running for 16.614)
2025-06-20T00:03:22.259+03:00 DEBUG 6108 --- [reactor-tcp-nio-1] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:22.415+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:22.429+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:22.436+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:22.619+03:00 DEBUG 6108 --- [parallel-3] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [SELECT item.* FROM item WHERE item.id = $1 LIMIT 2]
2025-06-20T00:03:22.659+03:00 ERROR 6108 --- [reactor-tcp-nio-7] com.maria.service.ItemServiceImpl        : Error occurred while retrieving item: Item does not exist
2025-06-20T00:03:22.790+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:22.807+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:22.812+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:22.815+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:22.837+03:00 DEBUG 6108 --- [parallel-5] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [SELECT item.* FROM item WHERE item.id = $1 LIMIT 2]
2025-06-20T00:03:22.844+03:00 ERROR 6108 --- [reactor-tcp-nio-2] com.maria.service.ItemServiceImpl        : Error occurred while retrieving item: Item does not exist
2025-06-20T00:03:22.855+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:22.867+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:22.870+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:22.874+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:22.901+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:22.910+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:22.913+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:22.917+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:22.939+03:00 ERROR 6108 --- [parallel-1] com.maria.service.ItemServiceImpl        : Error occurred while retrieving item: Failed to get item
2025-06-20T00:03:22.957+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:22.973+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:22.978+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:22.981+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:24.722+03:00 ERROR 6108 --- [sdk-async-response-0-0] com.maria.service.ItemServiceImpl        : Error while creating item: Failed to get item
2025-06-20T00:03:24.819+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:24.850+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:24.854+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:24.858+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:24.898+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:24.909+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:24.913+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:24.917+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:25.257+03:00 DEBUG 6108 --- [sdk-async-response-0-1] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [INSERT INTO item (item_name, description, image, is_sold, seller) VALUES ($1, $2, $3, $4, $5)]
2025-06-20T00:03:25.309+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:25.321+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:25.329+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:25.335+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:25.348+03:00 DEBUG 6108 --- [parallel-1] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [SELECT item.* FROM item WHERE item.id = $1 LIMIT 2]
2025-06-20T00:03:25.387+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:25.401+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:25.405+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:25.409+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:25.420+03:00 ERROR 6108 --- [parallel-3] com.maria.service.ItemServiceImpl        : Error occurred while retrieving item: Failed to get item
2025-06-20T00:03:25.431+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    CREATE SCHEMA IF NOT EXISTS auction;

    CREATE TABLE IF NOT EXISTS item (
        id SERIAL PRIMARY KEY,
        item_name VARCHAR(255) NOT NULL,
        description TEXT,
        image VARCHAR(255),
        is_sold BOOLEAN NOT NULL,
        auction_id BIGINT,
        seller BIGINT NOT NULL
    );
]
2025-06-20T00:03:25.441+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [DELETE FROM item]
2025-06-20T00:03:25.446+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [ALTER SEQUENCE item_id_seq RESTART WITH 1]
2025-06-20T00:03:25.451+03:00 DEBUG 6108 --- [main] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [    INSERT INTO item (item_name, description, image, is_sold, auction_id, seller)
    VALUES
    ('Laptop', 'Gaming laptop with RTX 3070', 'image1.jpg', FALSE, NULL, 1),
    ('Phone', 'New smartphone with great camera', 'image2.jpg', FALSE, 1, 1),
    ('Bike', 'Used mountain bike', 'image3.jpg', TRUE, 3, 1)
    ON CONFLICT (id) DO NOTHING;
]
2025-06-20T00:03:25.461+03:00 DEBUG 6108 --- [parallel-5] o.s.r2dbc.core.DefaultDatabaseClient     : Executing SQL statement [SELECT item.* FROM item WHERE item.id = $1 LIMIT 2]
