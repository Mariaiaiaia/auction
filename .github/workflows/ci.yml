name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build all services
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build all services
        run: |
          cd core && mvn clean install -DskipTests && cd ..
          for d in */ ; do
            if [[ $d == *"Service"* ]]; then
              cd $d && mvn clean package -DskipTests && cd ..
            fi
          done

  service-tests:
    name: Run service tests (Testcontainers)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run UserService tests
        run: |
          cd core && mvn install -DskipTests && cd ..
          cd UserService && mvn test

  integration-tests:
    name: Run integration tests (ServiceTests)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run AuctionService ServiceTests
        run: |
          cd core && mvn clean install -DskipTests && cd AuctionService
          mvn verify -Dtest=*ServiceTest

  api-tests:
    name: Run API handler tests (Docker Compose)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker services
        run: docker-compose -f docker-compose.yaml build

      - name: Start services
        run: docker-compose -f docker-compose.yaml up -d

      - name: Wait for services to be ready
        run: sleep 120

      - name: Run API handler tests
        run: |
          cd core && mvn install -DskipTests && cd ..
          cd AuctionService && mvn verify -Dtest=*HandlerTest

      - name: Stop services
        if: always()
        run: docker-compose -f docker-compose.yaml down
